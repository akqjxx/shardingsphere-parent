server:
  port: 9000

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: sharding-spring-boot-mybatis-example
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: ds
      ds:
        type: com.alibaba.druid.pool.DruidDataSource
        #        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://121.36.128.152:3307/ds?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        #        jdbc-url: jdbc:mysql://121.36.128.152:3307/ds?allowPublicKeyRetrieval=true&useSSL=false
        username: root
        password: root
    sharding:
      tables:
        t_order:
          actual-data-nodes: ds.t_order_$->{0..1}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: t_order_$->{id % 2}
          key-generator:
            column: id
            type: SNOWFLAKE
            props:
              worker.id: 123
#      binding-tables:
#        - t_order,t_item
mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath:mapperxml/**/*.xml
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: ASSIGN_ID
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 返回map时true:当查询数据为空时字段返回为null,false:不加这个查询数据为空时，字段将被隐藏
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    cache-enabled: true